@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

@if (OrderList.Count > 0)
{
    <TableTemplate Items="OrderList" Context="order">
        <TableHeader>
            <th scope="col" class="text-center" style="width:auto">Order #</th>
            <th scope="col" class="text-center" style="width:auto">Products</th>
            <th scope="col" class="text-center" style="width:auto">Cost</th>
            <th scope="col" class="text-center" style="width:auto">Creation Date</th>

            @if (IsClosed) 
            {
                <th scope="col" class="text-center" style="width:auto">Completion Date</th>
            }
            else 
            {
                <th scope="col" class="text-center" style="width:auto">Complete Order</th>
            }

            <th scope="col" class="text-center" style="width:auto">View</th>
            
        </TableHeader>
        <RowTemplate>
            <td class="align-middle text-center">
                @order.Id
            </td>
            <td class="align-middle text-center">
                @order.OrderItems.Count
            </td>
            <td class="align-middle text-center">
                @order.TotalCost.ToString("c")
            </td>
            <td class="align-middle text-center">
                @order.CreatedDateTime.ToString("MMMM dd yyyy")
            </td>

            @if (IsClosed) 
            {
                <td class="align-middle text-center">
                    @order.UpdatedDateTime?.ToString("MMMM dd yyyy")
                </td>
            }
            else 
            {
                <td class="align-middle text-center">
                    <i class="oi oi-circle-check text-primary p-2" @onclick="() => Complete(order.Id)"></i>
                </td>
            }

            <td class="align-middle text-center">
                <i class="oi oi-eye text-info p-2" @onclick="() => NavigateToPreview(order.Id)"></i>
            </td>
       
        </RowTemplate>
    </TableTemplate>
}
else
{
    <span>
        Loading orders...
    </span>
}

@code {
    [Parameter]
    public List<SalesOrderViewModel> OrderList { get; set; } = new List<SalesOrderViewModel>();

    [Parameter]
    public bool IsClosed { get; set; }

    [Parameter]
    public EventCallback<Guid> OnCompleted { get; set; }

    private async Task Complete(Guid orderId) 
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", $"Are you sure you want to mark this order fulfilled?");
        if (confirmed)
        {
            await OnCompleted.InvokeAsync(orderId);
        }
    }

    private void NavigateToPreview(Guid id)
    {
        var url = Path.Combine("/invoice", id.ToString());
        NavigationManager.NavigateTo(url);
    }
}
