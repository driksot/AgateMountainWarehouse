@page "/createProduct"

@inject IProductHttpRepository ProductHttpRepository
@inject NavigationManager NavigationManager

<h2>Create Product</h2>

<EditForm Model="_product" OnValidSubmit="Create" class="card card-body bg-light mt-4">
    <DataAnnotationsValidator />

    <div class="form-group row mb-2">
        <label for="name" class="col-md-2 col-form-label">Name:</label>
        <div class="col-md-10">
            <InputText id="name" class="form-control" @bind-Value="_product.Name" />
            <ValidationMessage For="@(() => _product.Name)" />
        </div>
    </div>

    <div class="form-group row my-2">
        <label for="description" class="col-md-2 col-form-label">Description:</label>
        <div class="col-md-10">
            <InputText id="description" class="form-control" @bind-Value="_product.Description" />
            <ValidationMessage For="@(() => _product.Description)" />
        </div>
    </div>

    <div class="form-group row my-2">
        <label for="price" class="col-md-2 col-form-label">Price:</label>
        <div class="col-md-10">
            <InputNumber id="price" class="form-control" @bind-Value="_product.Price" />
            <ValidationMessage For="@(() => _product.Price)" />
        </div>
    </div>

    <!-- TODO: Replace with image picker -->
    <div class="form-group row mt-2">
        <label for="image" class="col-md-2 col-form-label">Image:</label>
        <div class="col-md-10">
            <ImageUpload OnChange="AssignImageUrl" />
        </div>
    </div>

    <br/>

    <div class="px-1">
        <button type="submit" class="btn btn-success">Create</button>
        <button type="button" class="btn btn-primary ms-2" @onclick="Cancel">Cancel</button>
    </div>

</EditForm>

<SuccessNotification @ref="_notification" NavUrl="@_navUrl" />

@code {
    private ProductViewModel _product = new ProductViewModel();
    private SuccessNotification _notification = new SuccessNotification();
    private string _navUrl = "/products";

    private async Task Create()
    {
        await ProductHttpRepository.CreateProduct(_product);
        _notification.Show();
    }

    private void AssignImageUrl(string imgUrl) 
    {
        _product.ImageUrl = imgUrl;
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/products");
    }
}
