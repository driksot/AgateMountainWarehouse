@page "/reports/inventories/history"

@inject IInventoryHttpRepository InventoryHttpRepository
@inject IProductHttpRepository ProductHttpRepository

<h3>Inventory History</h3>

<MudChart 
    ChartType="ChartType.Line" 
    ChartSeries="@Series" 
    @bind-SelectedIndex="Index" 
    XAxisLabels="@XAxisLabels"
    ChartOptions="@_options"
    Width="100%" 
    Height="350px"></MudChart>

<MudSpacer />

<MudElement HtmlTag="section" Class="d-flex justify-center">

    <MudButton DisableElevation
               Variant="Variant.Filled"
               Color="Color.Primary"
               StartIcon="@Icons.Material.Filled.Print"
               IconColor="Color.Surface"
               Href="reports/inventories/history/print">
        Print Invoice History
    </MudButton>

</MudElement>

@code {
    private int Index = -1; //default value cannot be 0 -> first selectedindex is 0.
    private SnapshotResponseViewModel _snapshots = new SnapshotResponseViewModel();
    private readonly ChartOptions _options = new();

    public List<ChartSeries> Series = new List<ChartSeries>();
    public string[] XAxisLabels = new string[0];

    protected override async Task OnInitializedAsync()
    {
        _snapshots = await InventoryHttpRepository.GetSnapshotHistory();

        foreach (var snapshot in _snapshots.InventorySnapshots)
        {
            var product = await ProductHttpRepository.GetProductById(snapshot.ProductId.ToString());

            Series.Add(new ChartSeries() 
            { 
                Name = product.Name, 
                Data = snapshot.QuantityOnHand
            });
        }

        XAxisLabels = _snapshots.Timeline.Select(time => time.ToShortDateString()).ToArray();
        _options.YAxisTicks = 5;
    }
}
