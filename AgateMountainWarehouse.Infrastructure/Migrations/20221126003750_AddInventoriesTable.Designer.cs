// <auto-generated />
using System;
using AgateMountainWarehouse.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgateMountainWarehouse.Infrastructure.Migrations
{
    [DbContext(typeof(WarehouseDbContext))]
    [Migration("20221126003750_AddInventoriesTable")]
    partial class AddInventoriesTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AgateMountainWarehouse.Domain.Entities.Inventory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("QuantityOnHand")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("AgateMountainWarehouse.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c3440dc-4a58-466d-9945-d7b6db7c70ff"),
                            CreatedDateTime = new DateTime(2022, 11, 25, 17, 37, 50, 65, DateTimeKind.Local).AddTicks(2083),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            ImageUrl = "images/products/labradorite.png",
                            Name = "Labradorite",
                            Price = 35.0,
                            UpdatedDateTime = new DateTime(2022, 11, 25, 17, 37, 50, 65, DateTimeKind.Local).AddTicks(2097)
                        },
                        new
                        {
                            Id = new Guid("466ffa68-77e3-416c-bc15-658d3abe1532"),
                            CreatedDateTime = new DateTime(2022, 11, 25, 17, 37, 50, 65, DateTimeKind.Local).AddTicks(2102),
                            Description = "Nunc viverra imperdiet enim. Fusce est. Vivamus a tellus.",
                            ImageUrl = "images/products/turquoise.png",
                            Name = "Turquoise",
                            Price = 20.0,
                            UpdatedDateTime = new DateTime(2022, 11, 25, 17, 37, 50, 65, DateTimeKind.Local).AddTicks(2103)
                        },
                        new
                        {
                            Id = new Guid("b4de8dea-1c43-4885-b833-2659e399739f"),
                            CreatedDateTime = new DateTime(2022, 11, 25, 17, 37, 50, 65, DateTimeKind.Local).AddTicks(2105),
                            Description = "Suspendisse dui purus, scelerisque at, vulputate vitae, pretium mattis, nunc. Mauris eget neque at sem venenatis eleifend. Ut nonummy.",
                            ImageUrl = "images/products/star-garnet.png",
                            Name = "Star Garnet",
                            Price = 25.0,
                            UpdatedDateTime = new DateTime(2022, 11, 25, 17, 37, 50, 65, DateTimeKind.Local).AddTicks(2105)
                        },
                        new
                        {
                            Id = new Guid("8100f26f-12d2-4b20-a3e7-a535123529e0"),
                            CreatedDateTime = new DateTime(2022, 11, 25, 17, 37, 50, 65, DateTimeKind.Local).AddTicks(2107),
                            Description = "Suspendisse dui purus, scelerisque at, vulputate vitae, pretium mattis, nunc. Mauris eget neque at sem venenatis eleifend. Ut nonummy.",
                            ImageUrl = "images/products/jasper.png",
                            Name = "Jasper",
                            Price = 20.0,
                            UpdatedDateTime = new DateTime(2022, 11, 25, 17, 37, 50, 65, DateTimeKind.Local).AddTicks(2107)
                        },
                        new
                        {
                            Id = new Guid("cee2a195-c502-48a8-9558-19b2c4d1f34c"),
                            CreatedDateTime = new DateTime(2022, 11, 25, 17, 37, 50, 65, DateTimeKind.Local).AddTicks(2109),
                            Description = "Suspendisse dui purus, scelerisque at, vulputate vitae, pretium mattis, nunc. Mauris eget neque at sem venenatis eleifend. Ut nonummy.",
                            ImageUrl = "images/products/fire-opal.png",
                            Name = "Fire Opal",
                            Price = 18.0,
                            UpdatedDateTime = new DateTime(2022, 11, 25, 17, 37, 50, 65, DateTimeKind.Local).AddTicks(2109)
                        },
                        new
                        {
                            Id = new Guid("8a03c757-4608-49be-b7ac-a82f8b3e52a8"),
                            CreatedDateTime = new DateTime(2022, 11, 25, 17, 37, 50, 65, DateTimeKind.Local).AddTicks(2111),
                            Description = "Nunc viverra imperdiet enim. Fusce est. Vivamus a tellus.",
                            ImageUrl = "images/products/amethyst.png",
                            Name = "Amethyst",
                            Price = 22.0,
                            UpdatedDateTime = new DateTime(2022, 11, 25, 17, 37, 50, 65, DateTimeKind.Local).AddTicks(2112)
                        },
                        new
                        {
                            Id = new Guid("c379f7a2-05de-425a-8fee-1d27d42138ae"),
                            CreatedDateTime = new DateTime(2022, 11, 25, 17, 37, 50, 65, DateTimeKind.Local).AddTicks(2113),
                            Description = "Nunc viverra imperdiet enim. Fusce est. Vivamus a tellus.",
                            ImageUrl = "images/products/26-gauge-gold-wire.png",
                            Name = "26 Gauge Gold Wire",
                            Price = 9.0,
                            UpdatedDateTime = new DateTime(2022, 11, 25, 17, 37, 50, 65, DateTimeKind.Local).AddTicks(2114)
                        },
                        new
                        {
                            Id = new Guid("12642164-3efa-4e2f-ab50-37513c4e4838"),
                            CreatedDateTime = new DateTime(2022, 11, 25, 17, 37, 50, 65, DateTimeKind.Local).AddTicks(2115),
                            Description = "Suspendisse dui purus, scelerisque at, vulputate vitae, pretium mattis, nunc. Mauris eget neque at sem venenatis eleifend. Ut nonummy.",
                            ImageUrl = "images/products/24-gauge-gold-wire.png",
                            Name = "24 Gauge Gold Wire",
                            Price = 8.0,
                            UpdatedDateTime = new DateTime(2022, 11, 25, 17, 37, 50, 65, DateTimeKind.Local).AddTicks(2116)
                        });
                });

            modelBuilder.Entity("AgateMountainWarehouse.Domain.Entities.Inventory", b =>
                {
                    b.HasOne("AgateMountainWarehouse.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
